{"version":3,"sources":["Components/admin.module.css","Container/LoginPage.module.css","Container/AdminPage.module.css","Container/LoginPage.js","Components/AdminAddMedicinePage.js","Components/AdminViewInv.js","Components/AdminAddSaleExec.js","Components/AdminViewTeam.js","Components/SaleCreateOrder.js","Components/SaleViewOrder.js","Container/AdminPage.js","Components/Createpage.js","Components/viewpage.js","Container/SalePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Loginpage","localStorage","setItem","document","getElementById","addEventListener","e","preventDefault","user","value","password","logingadminuser","getItem","logingadminpassword","logingsaleuser","logingsalepassword","console","log","window","location","reload","className","classes","loginpagemain","maincontainer","action","formmain","type","placeholder","formitem","inputstyle","id","submitbutton","Component","AdminAddMedicinePage","changehandle","event","dataname","target","name","datavalue","setState","state","medicinedata","Name","ManufacturerName","Price","Stock","Discount","datatopush","previousdata","afterparse","JSON","parse","pre","push","stringify","formitemdisplay","form","headingtitle","lable","inputfield","onChange","this","React","AdminViewInv","props","deleting","deletingitem","gettingdatafromlocalstore","afterparsemedicinedata","datalength","length","i","style","display","editing","idgetting","split","Nameinput","ManufacturerNameinput","Priceinput","Stockinput","Discountinput","updating","innerText","deletingitemupdating","gettingdatafromlocalstoreupdating","afterparsemedicinedataupdating","count","map","data","index","tabledatarow","margin","aria-hidden","onClick","updatebutton","listmaincontainer","tablemain","tablehadingrow","AdminAddSaleExec","FirstName","LastName","Dateofbirth","Gender","ExperienceYears","AdminViewTeam","FirstNameinput","LastNameinput","Dateofbirthinput","Genderinput","ExperienceYearsinput","SaleCreateOrder","OrderId","CustomerName","CustomerContactNumber","Products","PurchaseQuantity","TotalAmount","SaleViewOrder","a","orderid","orderidinput","CustomerNameinput","CustomerContactNumberinput","Productsinput","PurchaseQuantityinput","TotalAmountinput","Homepage","signoutbutton","assign","activeTask","addmedicine","viewinventory","addsale","viewteam","addorder","vieworder","backgroundColor","heading","sidecontainer","sidesubcontainer","p","fontWeight","headcontainer","Createpage","autoid","Viewpage","height","SalePage","salecreateorder","salevieworder","App","isLogged","loginby","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.420d21cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"updatebutton\":\"admin_updatebutton__3qswN\",\"hide\":\"admin_hide__3_leH\",\"formitemdisplay\":\"admin_formitemdisplay__3NXg8\",\"inputfield\":\"admin_inputfield__kltk2\",\"lable\":\"admin_lable__1tuBq\",\"formitem\":\"admin_formitem__2MQP1\",\"form\":\"admin_form__1dn1c\",\"submitbutton\":\"admin_submitbutton__2LM6Y\",\"headingtitle\":\"admin_headingtitle__3_bDo\",\"listmaincontainer\":\"admin_listmaincontainer__2kS7u\",\"tablemain\":\"admin_tablemain__1rMMu\",\"tablehadingrow\":\"admin_tablehadingrow__34DIv\",\"tabledatarow\":\"admin_tabledatarow__f9Y2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginpagemain\":\"LoginPage_loginpagemain__2oKt8\",\"maincontainer\":\"LoginPage_maincontainer__lHLEU\",\"formmain\":\"LoginPage_formmain___DXDI\",\"formitem\":\"LoginPage_formitem__3_k7b\",\"submitbutton\":\"LoginPage_submitbutton__mmqJQ\",\"spanstyle\":\"LoginPage_spanstyle__3I-Hc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"AdminPage_main__2gbzm\",\"maincontainer\":\"AdminPage_maincontainer__1-I14\",\"sidecontainer\":\"AdminPage_sidecontainer__wEsYz\",\"sidesubcontainer\":\"AdminPage_sidesubcontainer__3UMb5\",\"p\":\"AdminPage_p__1ry6u\",\"headcontainer\":\"AdminPage_headcontainer__2BcJ-\",\"inputfield\":\"AdminPage_inputfield__8BMGM\",\"formitemdisplay\":\"AdminPage_formitemdisplay__2YBJH\",\"heading\":\"AdminPage_heading__3i7Z-\",\"signoutbutton\":\"AdminPage_signoutbutton__3jd62\"};","import classes from \"./LoginPage.module.css\"\nimport {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass Loginpage extends Component {\n\n    componentDidMount() {\n        localStorage.setItem(\"adminusername\",\"test-admin\")\n        localStorage.setItem(\"adminuserpassword\",\"test-admin\")\n        localStorage.setItem(\"saleusername\",\"test-sales\")\n        localStorage.setItem(\"saleuserpassword\",\"test-sales\")\n        const form = document.getElementById(\"loginbutton\")\n        form.addEventListener(\"click\",(e) => {\n            e.preventDefault()\n            const user = document.getElementById(\"userid\").value\n            const password = document.getElementById(\"password\").value\n            const logingadminuser = localStorage.getItem(\"adminusername\")\n            const logingadminpassword = localStorage.getItem(\"adminuserpassword\")\n            const logingsaleuser = localStorage.getItem(\"saleusername\")\n            const logingsalepassword = localStorage.getItem(\"saleuserpassword\")\n            if(logingadminuser === user && logingadminpassword === password){\n                console.log(\"Login Success\")\n\n                // window.location.assign(\"/adminpage\");\n                localStorage.setItem(\"isLogged\",true)\n                localStorage.setItem(\"loginby\",\"admin\")\n                window.location.reload(true);\n\n            }\n            if(logingsaleuser === user && logingsalepassword === password){\n                console.log(\"Login Success\")\n\n                // window.location.assign(\"/salepage\");\n                localStorage.setItem(\"isLogged\",true)\n                localStorage.setItem(\"loginby\",\"sale\")\n                window.location.reload(true);\n            }\n        })\n    }\n\n    render()\n    {\n        // localStorage.setItem(\"isLogged\",false)\n        // localStorage.setItem(\"loginby\",null)\n        return (\n            <div className={classes.loginpagemain}>\n            <h1>SHREE MEDICINE STORE</h1>\n                <div className={classes.maincontainer}>\n                    <form action=\"#\" className={classes.formmain}>\n                        <input type=\"text\" placeholder={\"     USERNAME\"}\n                               className={`${classes.formitem} ${classes.inputstyle}`} id={\"userid\"}/>\n                        <input type=\"password\" placeholder={\"     PASSWORD\"}\n                               className={`${classes.formitem} ${classes.inputstyle}`} id={\"password\"}/>\n                        <button type=\"submit\" className={`${classes.formitem} ${classes.submitbutton}`}\n                                id=\"loginbutton\">LOGIN\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginpage","import React from \"react\"\nimport classes from \"../Components/admin.module.css\";\n\nclass AdminAddMedicinePage extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            medicinedata:{},\n            Name:\"\",\n            ManufacturerName:\"\",\n            Price:\"\",\n            Stock:\"\",\n            Discount:\"\",\n        }\n    }\n    componentDidMount() {\n        const submit = document.getElementById(\"submit\")\n        submit.addEventListener(\"click\",(e) => {\n            e.preventDefault()\n            const datatopush = []\n            const previousdata = localStorage.getItem(\"medicinedata\")\n            const afterparse = JSON.parse(previousdata)\n            console.log(previousdata)\n            const pre = {\n                Name: this.state.Name,\n                ManufacturerName: this.state.ManufacturerName,\n                Price: this.state.Price,\n                Stock: this.state.Stock,\n                Discount: this.state.Discount\n            }\n\n            if(previousdata === null) {\n                datatopush.push(pre)\n                localStorage.setItem(\"medicinedata\",JSON.stringify(datatopush))\n            }\n            else {\n                afterparse.push(pre)\n                localStorage.setItem(\"medicinedata\",JSON.stringify(afterparse))\n            }\n            let Name = document.getElementById(\"Name\")\n            let ManufacturerName = document.getElementById(\"ManufacturerName\")\n            let Price = document.getElementById(\"Price\")\n            let Stock = document.getElementById(\"Stock\")\n            let Discount = document.getElementById(\"Discount\")\n            Name.value = \"\"\n            ManufacturerName.value = \"\"\n            Price.value = \"\"\n            Stock.value = \"\"\n            Discount.value = \"\"\n        })\n    }\n    changehandle = (event) => {\n        const dataname = event.target.name\n        const datavalue = event.target.value\n        this.setState({...this.state, [dataname]: datavalue})\n    }\n    render() {\n        return(\n            <div className={classes.formitemdisplay}>\n                <form className={classes.form}>\n                    <h1 className={classes.headingtitle}>Add Medicine to Inventory</h1>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Name</label>\n                        <input type=\"text\" name={\"Name\"} placeholder={\"Enter Name\"} className={classes.inputfield} id={\"Name\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Manufacturer Name</label>\n                        <input type=\"text\" name={\"ManufacturerName\"} placeholder={\"Enter Manufacturer Name\"} className={classes.inputfield} id={\"ManufacturerName\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Price</label>\n                        <input type=\"number\" name={\"Price\"} placeholder={\"Enter Price\"} className={classes.inputfield} id={\"Price\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Stock</label>\n                        <input type=\"number\" name={\"Stock\"} placeholder={\"Enter Stock\"} className={classes.inputfield} id={\"Stock\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Discount</label>\n                        <input type=\"number\" name={\"Discount\"} placeholder={\"Enter Discount\"} className={classes.inputfield} id={\"Discount\"} onChange={this.changehandle}/>\n                    </div>\n                        <button type={\"submit\"} className={classes.submitbutton} id={\"submit\"}>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\nexport default AdminAddMedicinePage","import React from \"react\"\nimport classes from \"./admin.module.css\";\n\nclass AdminViewInv extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            medicinedata:[],\n            count:0\n        };\n    }\n\n    deleting = (e) => {\n        const deletingitem = []\n        const gettingdatafromlocalstore = localStorage.getItem(\"medicinedata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const datalength = afterparsemedicinedata.length\n        for(let i = 0; i < datalength; i++){\n            if(e.target.id != i){\n                deletingitem.push(afterparsemedicinedata[i])\n            }\n            else{\n                let list = document.getElementById(\"list\"+i)\n                list.style.display = \"none\"\n            }\n        }\n        localStorage.setItem(\"medicinedata\",JSON.stringify(deletingitem))\n    }\n\n    editing = (e) => {\n        const gettingdatafromlocalstore = localStorage.getItem(\"medicinedata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const idgetting = e.target.id.split(\"n\")[1]\n        for(let i=0;i < afterparsemedicinedata.length;i++ ){\n            if(i == idgetting){\n                let Name = document.getElementById(\"Name\"+i)\n                let ManufacturerName = document.getElementById(\"ManufacturerName\"+i)\n                let Price = document.getElementById(\"Price\"+i)\n                let Stock = document.getElementById(\"Stock\"+i)\n                let Discount = document.getElementById(\"Discount\"+i)\n                let Nameinput = document.getElementById(\"Nameinput\"+i)\n                let ManufacturerNameinput = document.getElementById(\"ManufacturerNameinput\"+i)\n                let Priceinput = document.getElementById(\"Priceinput\"+i)\n                let Stockinput = document.getElementById(\"Stockinput\"+i)\n                let Discountinput = document.getElementById(\"Discountinput\"+i)\n                Name.style.display=\"none\"\n                ManufacturerName.style.display=\"none\"\n                Price.style.display=\"none\"\n                Stock.style.display=\"none\"\n                Discount.style.display=\"none\"\n                Nameinput.style.display=\"block\"\n                ManufacturerNameinput.style.display=\"block\"\n                Priceinput.style.display=\"block\"\n                Stockinput.style.display=\"block\"\n                Discountinput.style.display=\"block\"\n            }\n        }\n    }\n\n    updating = (e) => {\n        const gettingdatafromlocalstore = localStorage.getItem(\"medicinedata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const idgetting = e.target.id.split(\"n\")[1]\n        for(let i=0;i < afterparsemedicinedata.length;i++ ){\n            if(i == idgetting){\n                let Name = document.getElementById(\"Name\"+i)\n                let ManufacturerName = document.getElementById(\"ManufacturerName\"+i)\n                let Price = document.getElementById(\"Price\"+i)\n                let Stock = document.getElementById(\"Stock\"+i)\n                let Discount = document.getElementById(\"Discount\"+i)\n                let Nameinput = document.getElementById(\"Nameinput\"+i)\n                let ManufacturerNameinput = document.getElementById(\"ManufacturerNameinput\"+i)\n                let Priceinput = document.getElementById(\"Priceinput\"+i)\n                let Stockinput = document.getElementById(\"Stockinput\"+i)\n                let Discountinput = document.getElementById(\"Discountinput\"+i)\n                Name.style.display=\"block\"\n                ManufacturerName.style.display=\"block\"\n                Price.style.display=\"block\"\n                Stock.style.display=\"block\"\n                Discount.style.display=\"block\"\n                Nameinput.style.display=\"none\"\n                ManufacturerNameinput.style.display=\"none\"\n                Priceinput.style.display=\"none\"\n                Stockinput.style.display=\"none\"\n                Discountinput.style.display=\"none\"\n\n                Name.innerText = Nameinput.value\n                ManufacturerName.innerText = ManufacturerNameinput.value\n                Price.innerText = Priceinput.value\n                Stock.innerText = Stockinput.value\n                Discount.innerText = Discountinput.value\n            }\n        }\n\n        const deletingitemupdating = []\n        const gettingdatafromlocalstoreupdating = localStorage.getItem(\"medicinedata\")\n        const afterparsemedicinedataupdating = JSON.parse(gettingdatafromlocalstoreupdating)\n        for(let i = 0; i < afterparsemedicinedataupdating.length; i++){\n            const idgettings = e.target.id.split(\"n\")[1]\n            if(idgettings != i){\n                deletingitemupdating.push(afterparsemedicinedataupdating[i])\n            }\n            else{\n                let Name = document.getElementById(\"Name\"+i).innerText\n                let ManufacturerName = document.getElementById(\"ManufacturerName\"+i).innerText\n                let Price = document.getElementById(\"Price\"+i).innerText\n                let Stock = document.getElementById(\"Stock\"+i).innerText\n                let Discount = document.getElementById(\"Discount\"+i).innerText\n                const pre = {\n                    Name: Name,\n                    ManufacturerName: ManufacturerName,\n                    Price: Price,\n                    Stock: Stock,\n                    Discount: Discount\n                }\n                deletingitemupdating.push(pre)\n            }\n        }\n        localStorage.setItem(\"medicinedata\",JSON.stringify(deletingitemupdating))\n    }\n\n    render() {\n        const gettingdatafromlocalstore = localStorage.getItem(\"medicinedata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        let display\n        if(afterparsemedicinedata !== null){\n            display = afterparsemedicinedata.map((data,index) => {\n            return(\n                <tr id={\"list\"+index} key={index} className={classes.tabledatarow}>\n                    <td>\n                        <p id={\"Name\"+index}>\n                            {data.Name}\n                        </p>\n                        <input type=\"text\" id={\"Nameinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                    </td>\n                    <td>\n                        <p id={\"ManufacturerName\"+index}>\n                            {data.ManufacturerName}\n                        </p>\n                        <input type=\"text\" id={\"ManufacturerNameinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                    </td>\n                    <td>\n                        <p id={\"Price\"+index}>\n                            {data.Price} $\n                        </p>\n                        <input type=\"number\" id={\"Priceinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                    </td>\n                    <td>\n                        <p id={\"Stock\"+index}>\n                            {data.Stock}\n                        </p>\n                        <input type=\"number\" id={\"Stockinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                    </td>\n                    <td>\n                        <p id={\"Discount\"+index}>\n                            {data.Discount} %\n                        </p>\n                        <input type=\"number\" id={\"Discountinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                    </td>\n\n                    <td id={\"editbutton\"+index}>\n                        <i className=\"fa fa-pencil-square-o\" id={\"editicon\"+index} aria-hidden=\"true\" onClick={(e) => {e.target.style.display=\"none\";document.getElementById(\"updatebutton\"+index).style.display=\"block\" ;this.editing(e)}}></i>\n                        <button id={\"updatebutton\"+index} style={{margin:\"auto\"}} className={classes.updatebutton} onClick={(e) => {e.target.style.display=\"none\";document.getElementById(\"editicon\"+index).style.display=\"block\" ;this.updating(e)}}>Update</button>\n                    </td>\n                    <td id={\"deletebutton\"+index} onClick={(e) => this.deleting(e)}>\n                        <i className=\"fa fa-trash\" aria-hidden=\"true\" id={index}></i>\n                    </td>\n                </tr>\n            )\n            }\n        )}else{\n            display = () => {\n                return(<h1>No Data</h1>)\n            }\n        }\n        return(\n            <div className={classes.listmaincontainer}>\n                <h1>Inventory List</h1>\n                <table className={classes.tablemain}>\n                    <tbody>\n                        <tr className={classes.tablehadingrow}>\n                            <th>\n                                Name\n                            </th>\n                            <th>\n                                Manufacturer Name\n                            </th>\n                            <th>\n                                Price\n                            </th>\n                            <th>\n                                Stock\n                            </th>\n                            <th>\n                                Discount\n                            </th>\n                            <th>\n\n                            </th>\n                            <th>\n\n                            </th>\n                        </tr>\n                        {localStorage.getItem(\"medicinedata\") === null ? <h1>No Data</h1> : display}\n                        {/*{display}*/}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default AdminViewInv","import React from \"react\"\nimport classes from \"../Components/admin.module.css\";\n\nclass AdminAddSaleExec extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            medicinedata:{},\n            FirstName:\"\",\n            LastName:\"\",\n            Dateofbirth:\"\",\n            Gender:\"\",\n            ExperienceYears:\"\",\n        }\n    }\n    componentDidMount() {\n        const submit = document.getElementById(\"submit\")\n        submit.addEventListener(\"click\",(e) => {\n            e.preventDefault()\n            const datatopush = []\n            const previousdata = localStorage.getItem(\"salesdata\")\n            const afterparse = JSON.parse(previousdata)\n            console.log(previousdata)\n            const pre = {\n                FirstName: this.state.FirstName,\n                LastName: this.state.LastName,\n                Dateofbirth: this.state.Dateofbirth,\n                Gender: this.state.Gender,\n                ExperienceYears: this.state.ExperienceYears\n            }\n            if(previousdata === null) {\n                datatopush.push(pre)\n                localStorage.setItem(\"salesdata\",JSON.stringify(datatopush))\n            }\n            else {\n                afterparse.push(pre)\n                localStorage.setItem(\"salesdata\",JSON.stringify(afterparse))\n            }\n            let FirstName = document.getElementById(\"FirstName\")\n            let LastName = document.getElementById(\"LastName\")\n            let Dateofbirth = document.getElementById(\"Dateofbirth\")\n            let Gender = document.getElementById(\"Gender\")\n            let ExperienceYears = document.getElementById(\"ExperienceYears\")\n            FirstName.value = \"\"\n            LastName.value = \"\"\n            Dateofbirth.value = \"\"\n            Gender.value = \"\"\n            ExperienceYears.value = \"\"\n        })\n    }\n    changehandle = (event) => {\n        const dataname = event.target.name\n        const datavalue = event.target.value\n        this.setState({...this.state, [dataname]: datavalue})\n    }\n    render() {\n        return(\n            <div className={classes.formitemdisplay}>\n                <form className={classes.form}>\n                    <h1 className={classes.headingtitle}>Add Sales Executive</h1>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>First Name</label>\n                        <input type=\"text\" name={\"FirstName\"} placeholder={\"Enter First Name\"} className={classes.inputfield} id={\"FirstName\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Last Name</label>\n                        <input type=\"text\" name={\"LastName\"} placeholder={\"Enter Last Name\"} className={classes.inputfield} id={\"LastName\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Date of Birth</label>\n                        <input type=\"date\" name={\"Dateofbirth\"} className={classes.inputfield} id={\"Dateofbirth\"} onChange={this.changehandle}/>\n                    {/*<input type=\"text\" name={\"Gender\"} className={classes.inputfield} id={\"Gender\"} onChange={this.changehandle}/>*/}\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Gender</label>\n                        <select name=\"Gender\" id=\"Gender\" className={classes.inputfield} onChange={this.changehandle}>\n                            <option value=\"Gender\">-Gender-</option>\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Female\">Female</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Experience Years</label>\n                        <input type=\"number\" name={\"ExperienceYears\"} placeholder={\"Enter Experience Years\"} className={classes.inputfield} id={\"ExperienceYears\"} onChange={this.changehandle}/>\n                    </div>\n                    <button type={\"submit\"} className={classes.submitbutton} id={\"submit\"}>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\nexport default AdminAddSaleExec","import React from \"react\"\nimport classes from \"./admin.module.css\";\n\nclass AdminViewTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    deleting = (e) => {\n        const deletingitem = []\n        const gettingdatafromlocalstore = localStorage.getItem(\"salesdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const datalength = afterparsemedicinedata.length\n        for(let i = 0; i < datalength; i++){\n            if(e.target.id != i){\n                deletingitem.push(afterparsemedicinedata[i])\n            }\n            else{\n                let list = document.getElementById(\"list\"+i)\n                list.style.display = \"none\"\n            }\n        }\n        localStorage.setItem(\"salesdata\",JSON.stringify(deletingitem))\n    }\n\n    editing = (e) => {\n        const gettingdatafromlocalstore = localStorage.getItem(\"salesdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const idgetting = e.target.id.split(\"n\")[1]\n        for(let i=0;i < afterparsemedicinedata.length;i++ ){\n            if(i == idgetting){\n                let FirstName = document.getElementById(\"FirstName\"+i)\n                let LastName = document.getElementById(\"LastName\"+i)\n                let Dateofbirth = document.getElementById(\"Dateofbirth\"+i)\n                let Gender = document.getElementById(\"Gender\"+i)\n                let ExperienceYears = document.getElementById(\"ExperienceYears\"+i)\n                let FirstNameinput = document.getElementById(\"FirstNameinput\"+i)\n                let LastNameinput = document.getElementById(\"LastNameinput\"+i)\n                let Dateofbirthinput = document.getElementById(\"Dateofbirthinput\"+i)\n                let Genderinput = document.getElementById(\"Genderinput\"+i)\n                let ExperienceYearsinput = document.getElementById(\"ExperienceYearsinput\"+i)\n                FirstName.style.display=\"none\"\n                LastName.style.display=\"none\"\n                Dateofbirth.style.display=\"none\"\n                Gender.style.display=\"none\"\n                ExperienceYears.style.display=\"none\"\n                FirstNameinput.style.display=\"block\"\n                LastNameinput.style.display=\"block\"\n                Dateofbirthinput.style.display=\"block\"\n                Genderinput.style.display=\"block\"\n                ExperienceYearsinput.style.display=\"block\"\n            }\n        }\n    }\n\n    updating = (e) => {\n        const gettingdatafromlocalstore = localStorage.getItem(\"salesdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const idgetting = e.target.id.split(\"n\")[1]\n        for(let i=0;i < afterparsemedicinedata.length;i++ ){\n            if(i == idgetting){\n                let FirstName = document.getElementById(\"FirstName\"+i)\n                let LastName = document.getElementById(\"LastName\"+i)\n                let Dateofbirth = document.getElementById(\"Dateofbirth\"+i)\n                let Gender = document.getElementById(\"Gender\"+i)\n                let ExperienceYears = document.getElementById(\"ExperienceYears\"+i)\n                let FirstNameinput = document.getElementById(\"FirstNameinput\"+i)\n                let LastNameinput = document.getElementById(\"LastNameinput\"+i)\n                let Dateofbirthinput = document.getElementById(\"Dateofbirthinput\"+i)\n                let Genderinput = document.getElementById(\"Genderinput\"+i)\n                let ExperienceYearsinput = document.getElementById(\"ExperienceYearsinput\"+i)\n                FirstName.style.display=\"block\"\n                LastName.style.display=\"block\"\n                Dateofbirth.style.display=\"block\"\n                Gender.style.display=\"block\"\n                ExperienceYears.style.display=\"block\"\n                FirstNameinput.style.display=\"none\"\n                LastNameinput.style.display=\"none\"\n                Dateofbirthinput.style.display=\"none\"\n                Genderinput.style.display=\"none\"\n                ExperienceYearsinput.style.display=\"none\"\n\n                FirstName.innerText = FirstNameinput.value\n                LastName.innerText = LastNameinput.value\n                Dateofbirth.innerText = Dateofbirthinput.value\n                Gender.innerText = Genderinput.value\n                ExperienceYears.innerText = ExperienceYearsinput.value\n\n            }\n        }\n\n        const deletingitemupdating = []\n        const gettingdatafromlocalstoreupdating = localStorage.getItem(\"salesdata\")\n        const afterparsemedicinedataupdating = JSON.parse(gettingdatafromlocalstoreupdating)\n        for(let i = 0; i < afterparsemedicinedataupdating.length; i++){\n            const idgettings = e.target.id.split(\"n\")[1]\n            if(idgettings != i){\n                deletingitemupdating.push(afterparsemedicinedataupdating[i])\n            }\n            else{\n                let FirstName = document.getElementById(\"FirstName\"+i).innerText\n                let LastName = document.getElementById(\"LastName\"+i).innerText\n                let Dateofbirth = document.getElementById(\"Dateofbirth\"+i).innerText\n                let Gender = document.getElementById(\"Gender\"+i).innerText\n                let ExperienceYears = document.getElementById(\"ExperienceYears\"+i).innerText\n                const pre = {\n                    FirstName: FirstName,\n                    LastName: LastName,\n                    Dateofbirth: Dateofbirth,\n                    Gender: Gender,\n                    ExperienceYears: ExperienceYears\n                }\n                deletingitemupdating.push(pre)\n            }\n        }\n        localStorage.setItem(\"salesdata\",JSON.stringify(deletingitemupdating))\n    }\n\n    render() {\n        const gettingdatafromlocalstore = localStorage.getItem(\"salesdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        let display\n        if(afterparsemedicinedata !== null){\n            display = afterparsemedicinedata.map((data,index) => {\n                return(\n                    <tr id={\"list\"+index} key={index} className={classes.tabledatarow}>\n                        <td>\n                            <p id={\"FirstName\"+index}>\n                                {data.FirstName}\n                            </p>\n                            <input type=\"text\" id={\"FirstNameinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"LastName\"+index}>\n                                {data.LastName}\n                            </p>\n                            <input type=\"text\" id={\"LastNameinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"Dateofbirth\"+index}>\n                                {data.Dateofbirth}\n                            </p>\n                            <input type=\"date\" id={\"Dateofbirthinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"Gender\"+index}>\n                                {data.Gender}\n                            </p>\n                            <input type=\"text\" id={\"Genderinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"ExperienceYears\"+index}>\n                                {data.ExperienceYears}\n                            </p>\n                            <input type=\"number\" id={\"ExperienceYearsinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td id={\"editbutton\"+index}>\n                            <i className=\"fa fa-pencil-square-o\" id={\"editicon\"+index} aria-hidden=\"true\" onClick={(e) => {e.target.style.display=\"none\";document.getElementById(\"updatebutton\"+index).style.display=\"block\" ;this.editing(e)}}></i>\n                            <button id={\"updatebutton\"+index} style={{margin:\"auto\"}} className={classes.updatebutton} onClick={(e) => {e.target.style.display=\"none\";document.getElementById(\"editicon\"+index).style.display=\"block\" ;this.updating(e)}}>Update</button>\n                        </td>\n                        <td id={\"deletebutton\"+index} onClick={(e) => this.deleting(e)}>\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\" id={index}></i>\n                        </td>\n                    </tr>\n                )\n            }\n        )}else{\n            display = () => {\n                return(<h1>No Data</h1>)\n            }\n        }\n        return(\n            <div className={classes.listmaincontainer}>\n                <h1>Team List</h1>\n                <table className={classes.tablemain}>\n                    <tbody>\n                        <tr className={classes.tablehadingrow}>\n                            <th>\n                                First Name\n                            </th>\n                            <th>\n                                Last Name\n                            </th>\n                            <th>\n                                Date of Birth\n                            </th>\n                            <th>\n                                Gender\n                            </th>\n                            <th>\n                                Experience Years\n                            </th>\n                            <th>\n\n                            </th>\n                            <th>\n\n                            </th>\n                        </tr>\n                        {localStorage.getItem(\"salesdata\") === null ? <h1>No Data</h1> : display}\n                        {/*{display}*/}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}export default AdminViewTeam","import React from \"react\"\nimport classes from \"../Components/admin.module.css\";\n\nclass SaleCreateOrder extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            medicinedata:{},\n            OrderId:\"\",\n            CustomerName:\"\",\n            CustomerContactNumber:\"\",\n            Products:\"\",\n            PurchaseQuantity:\"\",\n            TotalAmount:\"\",\n        }\n    }\n    componentDidMount() {\n        const submit = document.getElementById(\"submit\")\n        submit.addEventListener(\"click\",(e) => {\n            e.preventDefault()\n            const datatopush = []\n            const previousdata = localStorage.getItem(\"orderdata\")\n            const afterparse = JSON.parse(previousdata)\n            console.log(afterparse)\n            const pre = {\n                OrderId: this.state.OrderId,\n                CustomerName: this.state.CustomerName,\n                CustomerContactNumber: this.state.CustomerContactNumber,\n                Products: this.state.Products,\n                PurchaseQuantity: this.state.PurchaseQuantity,\n                TotalAmount: this.state.TotalAmount\n            }\n\n            if(previousdata === null) {\n                datatopush.push(pre)\n                localStorage.setItem(\"orderdata\",JSON.stringify(datatopush))\n            }\n            else {\n                afterparse.push(pre)\n                localStorage.setItem(\"orderdata\",JSON.stringify(afterparse))\n            }\n            let OrderId = document.getElementById(\"OrderId\")\n            let CustomerName = document.getElementById(\"CustomerName\")\n            let CustomerContactNumber = document.getElementById(\"CustomerContactNumber\")\n            let PurchaseQuantity = document.getElementById(\"PurchaseQuantity\")\n            let Products = document.getElementById(\"Products\")\n            let TotalAmount = document.getElementById(\"TotalAmount\")\n            OrderId.value = \"\"\n            CustomerName.value = \"\"\n            CustomerContactNumber.value = \"\"\n            PurchaseQuantity.value = \"\"\n            Products.value = \"\"\n            TotalAmount.value = \"\"\n        })\n\n    }\n\n    changehandle = (event) => {\n        const dataname = event.target.name\n        const datavalue = event.target.value\n        this.setState({...this.state, [dataname]: datavalue})\n    }\n\n    render() {\n        return(\n            <div className={classes.formitemdisplay}>\n                <form className={classes.form}>\n                    <h1 className={classes.headingtitle}>Add Order</h1>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Order Id</label>\n                        <input type=\"number\" name={\"OrderId\"} placeholder={\"Enter Order Id\"} className={classes.inputfield} id={\"OrderId\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Customer Name</label>\n                        <input type=\"text\" name={\"CustomerName\"} placeholder={\"Enter CustomerName\"} className={classes.inputfield} id={\"CustomerName\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Customer Contact Number</label>\n                        <input type=\"number\" name={\"CustomerContactNumber\"} placeholder={\"Enter Customer Contact Number\"} className={classes.inputfield} id={\"CustomerContactNumber\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Products</label>\n                        <input type=\"text\" name={\"Products\"} placeholder={\"Enter Products\"} className={classes.inputfield} id={\"Products\"} onChange={this.changehandle}/>\n                    {/*<select name=\"Gender\" id=\"Gender\" onChange={this.changehandle}>*/}\n                    {/*    <option value=\"Gender\">-Gender-</option>*/}\n                    {/*    <option value=\"Male\">Male</option>*/}\n                    {/*    <option value=\"Female\">Female</option>*/}\n                    {/*    <option value=\"Other\">Other</option>*/}\n                    {/*</select>*/}\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Purchase Quantity</label>\n                        <input type=\"number\" name={\"PurchaseQuantity\"} placeholder={\"Enter Purchase Quantity\"} className={classes.inputfield} id={\"PurchaseQuantity\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Total Amount</label>\n                        <input type=\"number\" name={\"TotalAmount\"} placeholder={\"Enter Total Amount\"} className={classes.inputfield} id={\"TotalAmount\"} onChange={this.changehandle}/>\n                    </div>\n                        <button type={\"submit\"} className={classes.submitbutton} id={\"submit\"}>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SaleCreateOrder","import React from \"react\"\nimport classes from \"./admin.module.css\"\nimport \"./admin.module.css\"\n\nclass SaleViewOrder extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            medicinedata:[],\n            count:0\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    deleting = (e) => {\n        const deletingitem = []\n        const gettingdatafromlocalstore = localStorage.getItem(\"orderdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const datalength = afterparsemedicinedata.length\n        let a = e.target.id\n        for(let i = 0; i < datalength; i++){\n            if(a != i){\n                deletingitem.push(afterparsemedicinedata[i])\n            }\n            else{\n                let list = document.getElementById(\"list\"+i)\n                list.style.display = \"none\"\n            }\n        }\n        localStorage.setItem(\"orderdata\",JSON.stringify(deletingitem))\n\n    }\n\n    editing = (e) => {\n        const gettingdatafromlocalstore = localStorage.getItem(\"orderdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const idgetting = e.target.id.split(\"n\")[1]\n        for(let i=0;i < afterparsemedicinedata.length;i++ ){\n            if(i == idgetting){\n                let orderid = document.getElementById(\"orderid\"+i)\n                let CustomerName = document.getElementById(\"CustomerName\"+i)\n                let CustomerContactNumber = document.getElementById(\"CustomerContactNumber\"+i)\n                let Products = document.getElementById(\"Products\"+i)\n                let PurchaseQuantity = document.getElementById(\"PurchaseQuantity\"+i)\n                let TotalAmount = document.getElementById(\"TotalAmount\"+i)\n                let orderidinput = document.getElementById(\"orderidinput\"+i)\n                let CustomerNameinput = document.getElementById(\"CustomerNameinput\"+i)\n                let CustomerContactNumberinput = document.getElementById(\"CustomerContactNumberinput\"+i)\n                let Productsinput = document.getElementById(\"Productsinput\"+i)\n                let PurchaseQuantityinput = document.getElementById(\"PurchaseQuantityinput\"+i)\n                let TotalAmountinput = document.getElementById(\"TotalAmountinput\"+i)\n                orderid.style.display=\"none\"\n                CustomerName.style.display=\"none\"\n                CustomerContactNumber.style.display=\"none\"\n                Products.style.display=\"none\"\n                PurchaseQuantity.style.display=\"none\"\n                TotalAmount.style.display=\"none\"\n                orderidinput.style.display=\"block\"\n                CustomerNameinput.style.display=\"block\"\n                CustomerContactNumberinput.style.display=\"block\"\n                Productsinput.style.display=\"block\"\n                PurchaseQuantityinput.style.display=\"block\"\n                TotalAmountinput.style.display=\"block\"\n            }\n        }\n    }\n\n    updating = (e) => {\n        const gettingdatafromlocalstore = localStorage.getItem(\"orderdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        const idgetting = e.target.id.split(\"n\")[1]\n        for(let i=0;i < afterparsemedicinedata.length;i++ ){\n            if(i == idgetting){\n                let orderid = document.getElementById(\"orderid\"+i)\n                let CustomerName = document.getElementById(\"CustomerName\"+i)\n                let CustomerContactNumber = document.getElementById(\"CustomerContactNumber\"+i)\n                let Products = document.getElementById(\"Products\"+i)\n                let PurchaseQuantity = document.getElementById(\"PurchaseQuantity\"+i)\n                let TotalAmount = document.getElementById(\"TotalAmount\"+i)\n                let orderidinput = document.getElementById(\"orderidinput\"+i)\n                let CustomerNameinput = document.getElementById(\"CustomerNameinput\"+i)\n                let CustomerContactNumberinput = document.getElementById(\"CustomerContactNumberinput\"+i)\n                let Productsinput = document.getElementById(\"Productsinput\"+i)\n                let PurchaseQuantityinput = document.getElementById(\"PurchaseQuantityinput\"+i)\n                let TotalAmountinput = document.getElementById(\"TotalAmountinput\"+i)\n                orderid.style.display=\"block\"\n                CustomerName.style.display=\"block\"\n                CustomerContactNumber.style.display=\"block\"\n                Products.style.display=\"block\"\n                PurchaseQuantity.style.display=\"block\"\n                TotalAmount.style.display=\"block\"\n                orderidinput.style.display=\"none\"\n                CustomerNameinput.style.display=\"none\"\n                CustomerContactNumberinput.style.display=\"none\"\n                Productsinput.style.display=\"none\"\n                PurchaseQuantityinput.style.display=\"none\"\n                TotalAmountinput.style.display=\"none\"\n\n                orderid.innerText = orderidinput.value\n                CustomerName.innerText = CustomerNameinput.value\n                CustomerContactNumber.innerText = CustomerContactNumberinput.value\n                Products.innerText = Productsinput.value\n                PurchaseQuantity.innerText = PurchaseQuantityinput.value\n                TotalAmount.innerText = TotalAmountinput.value\n\n            }\n        }\n\n        const deletingitemupdating = []\n        const gettingdatafromlocalstoreupdating = localStorage.getItem(\"orderdata\")\n        const afterparsemedicinedataupdating = JSON.parse(gettingdatafromlocalstoreupdating)\n        for(let i = 0; i < afterparsemedicinedataupdating.length; i++){\n            const idgettings = e.target.id.split(\"n\")[1]\n            if(idgettings != i){\n                deletingitemupdating.push(afterparsemedicinedataupdating[i])\n            }\n            else{\n                let orderid = document.getElementById(\"orderid\"+i).innerText\n                let CustomerName = document.getElementById(\"CustomerName\"+i).innerText\n                let CustomerContactNumber = document.getElementById(\"CustomerContactNumber\"+i).innerText\n                let Products = document.getElementById(\"Products\"+i).innerText\n                let PurchaseQuantity = document.getElementById(\"PurchaseQuantity\"+i).innerText\n                let TotalAmount = document.getElementById(\"TotalAmount\"+i).innerText\n                const pre = {\n                    OrderId: orderid,\n                    CustomerName: CustomerName,\n                    CustomerContactNumber: CustomerContactNumber,\n                    Products: Products,\n                    PurchaseQuantity: PurchaseQuantity,\n                    TotalAmount: TotalAmount,\n                }\n                deletingitemupdating.push(pre)\n            }\n        }\n        localStorage.setItem(\"orderdata\",JSON.stringify(deletingitemupdating))\n    }\n\n    render() {\n        const gettingdatafromlocalstore = localStorage.getItem(\"orderdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        let display\n        if(afterparsemedicinedata !== null){\n            display = afterparsemedicinedata.map((data,index) => {\n                return(\n                    <tr id={\"list\"+index} key={index} className={classes.tabledatarow}>\n                        <td>\n                            <p id={\"orderid\"+index}>\n                                {data.OrderId}\n                            </p>\n                            <input type=\"number\" id={\"orderidinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"CustomerName\"+index}>\n                                {data.CustomerName}\n                            </p>\n                            <input type=\"text\" id={\"CustomerNameinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"CustomerContactNumber\"+index}>\n                                {data.CustomerContactNumber}\n                            </p>\n                            <input type=\"number\" id={\"CustomerContactNumberinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"Products\"+index}>\n                                {data.Products}\n                            </p>\n                            <input type=\"text\" id={\"Productsinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"PurchaseQuantity\"+index}>\n                                {data.PurchaseQuantity}\n                            </p>\n                            <input type=\"number\" id={\"PurchaseQuantityinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td>\n                            <p id={\"TotalAmount\"+index}>\n                                {data.TotalAmount}\n                            </p>\n                            <input type=\"number\" id={\"TotalAmountinput\"+index} style={{display:\"none\",margin:\"auto\"}} />\n                        </td>\n                        <td id={\"editbutton\"+index}>\n                            <i className=\"fa fa-pencil-square-o\" id={\"editicon\"+index} aria-hidden=\"true\" onClick={(e) => {e.target.style.display=\"none\";document.getElementById(\"updatebutton\"+index).style.display=\"block\" ;this.editing(e)}}></i>\n                            <button id={\"updatebutton\"+index} style={{margin:\"auto\"}} className={classes.updatebutton} onClick={(e) => {e.target.style.display=\"none\";document.getElementById(\"editicon\"+index).style.display=\"block\" ;this.updating(e)}}>Update</button>\n                        </td>\n                        <td id={\"deletebutton\"+index} onClick={(e) => this.deleting(e)}>\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\" id={index}></i>\n                        </td>\n                    </tr>\n                )\n            }\n        )}else{\n            display = () => {\n                return(<h1>No Data</h1>)\n            }\n        }\n        return(\n            <div className={classes.listmaincontainer}>\n                <h1>Order List</h1>\n                <table className={classes.tablemain}>\n                    <tbody>\n                        <tr className={classes.tablemain}>\n                            <th>\n                                Order Id\n                            </th>\n                            <th>\n                                Customer Name\n                            </th>\n                            <th>\n                                Customer Contact Number\n                            </th>\n                            <th>\n                                Products\n                            </th>\n                            <th>\n                                Purchase Quantity\n                            </th>\n                            <th>\n                                Total Amount\n                            </th>\n                            <th>\n\n                            </th>\n                            <th>\n\n                            </th>\n                        </tr>\n                        {localStorage.getItem(\"orderdata\") === null ? <h1>No Data</h1> : display}\n                        {/*{display}*/}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default SaleViewOrder","import React from \"react\"\nimport classes from \"./AdminPage.module.css\"\nimport AdminAddMedicinePage from \"../Components/AdminAddMedicinePage\";\nimport AdminViewInv from \"../Components/AdminViewInv\";\nimport AdminAddSaleExec from \"../Components/AdminAddSaleExec\";\nimport AdminViewTeam from \"../Components/AdminViewTeam\";\nimport SaleCreateOrder from \"../Components/SaleCreateOrder\";\nimport SaleViewOrder from \"../Components/SaleViewOrder\";\n\nclass Homepage extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            activeTask:{addmedicine:true,viewinventory:false,addsale:false,viewteam:false}\n        }\n    }\n\n    componentDidMount() {\n        const addmedicine = document.getElementById(\"addmedicine\")\n        const viewinventory = document.getElementById(\"viewinventory\")\n        const addsale = document.getElementById(\"addsale\")\n        const viewteam = document.getElementById(\"viewteam\")\n        const addorder = document.getElementById(\"addorder\")\n        const vieworder = document.getElementById(\"vieworder\")\n        addmedicine.addEventListener(\"click\",() => {\n            this.setState({activeTask:{addmedicine:true,viewinventory:false,addsale:false,viewteam:false,addorder:false,vieworder:false}})\n            addmedicine.style.backgroundColor = \"#90999F\"\n            viewinventory.style.backgroundColor = \"#F2F2F2\"\n            addsale.style.backgroundColor = \"#F2F2F2\"\n            viewteam.style.backgroundColor = \"#F2F2F2\"\n            addorder.style.backgroundColor = \"#F2F2F2\"\n            vieworder.style.backgroundColor = \"#F2F2F2\"\n        })\n        viewinventory.addEventListener(\"click\",() => {\n            this.setState({activeTask:{addmedicine:false,viewinventory:true,addsale:false,viewteam:false,addorder:false,vieworder:false}})\n            addmedicine.style.backgroundColor = \"#F2F2F2\"\n            viewinventory.style.backgroundColor = \"#90999F\"\n            addsale.style.backgroundColor = \"#F2F2F2\"\n            viewteam.style.backgroundColor = \"#F2F2F2\"\n            addorder.style.backgroundColor = \"#F2F2F2\"\n            vieworder.style.backgroundColor = \"#F2F2F2\"\n        })\n        addsale.addEventListener(\"click\",() => {\n            this.setState({activeTask:{addmedicine:false,viewinventory:false,addsale:true,viewteam:false,addorder:false,vieworder:false}})\n            addmedicine.style.backgroundColor = \"#F2F2F2\"\n            viewinventory.style.backgroundColor = \"#F2F2F2\"\n            addsale.style.backgroundColor = \"#90999F\"\n            viewteam.style.backgroundColor = \"#F2F2F2\"\n            addorder.style.backgroundColor = \"#F2F2F2\"\n            vieworder.style.backgroundColor = \"#F2F2F2\"\n        })\n        viewteam.addEventListener(\"click\",() => {\n            this.setState({activeTask:{addmedicine:false,viewinventory:false,addsale:false,viewteam:true,addorder:false,vieworder:false}})\n            addmedicine.style.backgroundColor = \"#F2F2F2\"\n            viewinventory.style.backgroundColor = \"#F2F2F2\"\n            addsale.style.backgroundColor = \"#F2F2F2\"\n            viewteam.style.backgroundColor = \"#90999F\"\n            addorder.style.backgroundColor = \"#F2F2F2\"\n            vieworder.style.backgroundColor = \"#F2F2F2\"\n        })\n        addorder.addEventListener(\"click\",() => {\n            this.setState({activeTask:{addmedicine:false,viewinventory:false,addsale:false,viewteam:false,addorder:true,vieworder:false}})\n            addmedicine.style.backgroundColor = \"#F2F2F2\"\n            viewinventory.style.backgroundColor = \"#F2F2F2\"\n            addsale.style.backgroundColor = \"#F2F2F2\"\n            viewteam.style.backgroundColor = \"#F2F2F2\"\n            addorder.style.backgroundColor = \"#90999F\"\n            vieworder.style.backgroundColor = \"#F2F2F2\"\n        })\n        vieworder.addEventListener(\"click\",() => {\n            this.setState({activeTask:{addmedicine:false,viewinventory:false,addsale:false,viewteam:false,addorder:false,vieworder:true}})\n            addmedicine.style.backgroundColor = \"#F2F2F2\"\n            viewinventory.style.backgroundColor = \"#F2F2F2\"\n            addsale.style.backgroundColor = \"#F2F2F2\"\n            viewteam.style.backgroundColor = \"#F2F2F2\"\n            addorder.style.backgroundColor = \"#F2F2F2\"\n            vieworder.style.backgroundColor = \"#90999F\"\n        })\n    }\n\n    signoutbutton = () => {\n        localStorage.setItem(\"isLogged\",false)\n        localStorage.setItem(\"loginby\",null)\n        window.location.assign(\"/\");\n    }\n\n    render() {\n        return(\n            <div>\n                <div className={classes.heading}>\n                    <h1>Admin</h1>\n                    <button onClick={this.signoutbutton} className={classes.signoutbutton}>Sign Out</button>\n                </div>\n                <div className={classes.maincontainer}>\n                    <div className={classes.sidecontainer}>\n                        <div className={classes.sidesubcontainer}>\n                            <p id={\"addmedicine\"} className={classes.p} style={{backgroundColor:\"#90999F\",\n                            fontWeight:\"800\"}}>\n                                Add Medicine to Inventory\n                            </p>\n                            <p id={\"viewinventory\"} className={classes.p}>\n                                View Inventory\n                            </p>\n                        </div>\n                        <div className={classes.sidesubcontainer}>\n                            <p id={\"addsale\"} className={classes.p}>\n                                Add Sales Executive\n                            </p>\n                            <p id={\"viewteam\"} className={classes.p}>\n                                View Team\n                            </p>\n                        </div>\n                        <div className={classes.sidesubcontainer}>\n                            <p id={\"addorder\"} className={classes.p}>\n                                Add Order\n                            </p>\n                            <p id={\"vieworder\"} className={classes.p}>\n                                View Order\n                            </p>\n                        </div>\n                    </div>\n                    <div className={classes.headcontainer}>\n                    {this.state.activeTask.addmedicine ? <AdminAddMedicinePage /> : this.state.activeTask.viewinventory ? <AdminViewInv /> : this.state.activeTask.addsale ? <AdminAddSaleExec /> : this.state.activeTask.viewteam ? <AdminViewTeam /> : this.state.activeTask.addorder ? <SaleCreateOrder /> :this.state.activeTask.vieworder ? <SaleViewOrder /> : <h1>Nothing</h1>}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Homepage","import React from \"react\"\nimport classes from \"../Components/admin.module.css\";\n\nclass Createpage extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            medicinedata:{},\n            OrderId:\"\",\n            CustomerName:\"\",\n            CustomerContactNumber:\"\",\n            Products:\"\",\n            PurchaseQuantity:\"\",\n            TotalAmount:\"\"\n        }\n    }\n    componentDidMount() {\n        const id = document.getElementById(\"OrderId\").value\n        const submit = document.getElementById(\"submit\")\n        submit.addEventListener(\"click\",(e) => {\n            e.preventDefault()\n            const datatopush = []\n            const previousdata = localStorage.getItem(\"orderdata\")\n            const afterparse = JSON.parse(previousdata)\n            const pre = {\n                OrderId: id,\n                CustomerName: this.state.CustomerName,\n                CustomerContactNumber: this.state.CustomerContactNumber,\n                Products: this.state.Products,\n                PurchaseQuantity: this.state.PurchaseQuantity,\n                TotalAmount: this.state.TotalAmount,\n            }\n            if(previousdata === null) {\n                datatopush.push(pre)\n                localStorage.setItem(\"orderdata\",JSON.stringify(datatopush))\n            }\n            else {\n                afterparse.push(pre)\n                localStorage.setItem(\"orderdata\",JSON.stringify(afterparse))\n            }\n            let CustomerName = document.getElementById(\"CustomerName\")\n            let CustomerContactNumber = document.getElementById(\"CustomerContactNumber\")\n            let PurchaseQuantity = document.getElementById(\"PurchaseQuantity\")\n            let Products = document.getElementById(\"Products\")\n            let TotalAmount = document.getElementById(\"TotalAmount\")\n            CustomerName.value = \"\"\n            CustomerContactNumber.value = \"\"\n            PurchaseQuantity.value = \"\"\n            Products.value = \"\"\n            TotalAmount.value = \"\"\n        })\n    }\n\n    changehandle = (event) => {\n        const dataname = event.target.name\n        const datavalue = event.target.value\n        this.setState({...this.state, [dataname]: datavalue})\n    }\n\n    render() {\n        const autoid = localStorage.getItem(\"orderdata\")\n        let a\n        if(autoid === null){\n            a = 0\n        }\n        else{\n            a = JSON.parse(autoid).length\n        }\n\n\n        return(\n            <div className={classes.formitemdisplay}>\n                <form className={classes.form}>\n                    <h1 className={classes.headingtitle}>Add Order</h1>\n                    <div className={classes.formitem}>\n                        {/*<label className={classes.lable}>Order Id</label>*/}\n                        <input type=\"number\" name={\"OrderId\"} className={classes.inputfield} value={a} id={\"OrderId\"}style={{display:\"none\"}} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Customer Name</label>\n                        <input type=\"text\" name={\"CustomerName\"} placeholder={\"Enter Customer Name\"} className={classes.inputfield} id={\"CustomerName\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Customer Contact Number</label>\n                        <input type=\"number\" name={\"CustomerContactNumber\"} placeholder={\"Enter Customer Contact Number\"} className={classes.inputfield} id={\"CustomerContactNumber\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Products</label>\n                        <input type=\"text\" name={\"Products\"} placeholder={\"Enter Products\"} className={classes.inputfield} id={\"Products\"} onChange={this.changehandle}/>\n                    {/*<select name=\"Gender\" id=\"Gender\" onChange={this.changehandle}>*/}\n                    {/*    <option value=\"Gender\">-Gender-</option>*/}\n                    {/*    <option value=\"Male\">Male</option>*/}\n                    {/*    <option value=\"Female\">Female</option>*/}\n                    {/*    <option value=\"Other\">Other</option>*/}\n                    {/*</select>*/}\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Purchase Quantity</label>\n                        <input type=\"number\" name={\"PurchaseQuantity\"} placeholder={\"Enter Purchase Quantity\"} className={classes.inputfield} id={\"PurchaseQuantity\"} onChange={this.changehandle}/>\n                    </div>\n                    <div className={classes.formitem}>\n                        <label className={classes.lable}>Total Amount</label>\n                        <input type=\"number\" name={\"TotalAmount\"} placeholder={\"Enter Total Amount\"} className={classes.inputfield} id={\"TotalAmount\"} onChange={this.changehandle}/>\n                    </div>\n                        <button type={\"submit\"} className={classes.submitbutton} id={\"submit\"}>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Createpage","import React from \"react\"\nimport classes from \"./admin.module.css\"\n\nclass Viewpage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            medicinedata:[],\n            count:0\n        };\n    }\n    render() {\n        const gettingdatafromlocalstore = localStorage.getItem(\"orderdata\")\n        const afterparsemedicinedata = JSON.parse(gettingdatafromlocalstore)\n        let display\n        if(afterparsemedicinedata !== null) {\n            display = afterparsemedicinedata.map((data, index) => {\n                return (\n                    <tr key={index} className={classes.tabledatarow} style={{height: \"55px\"}}>\n                        <td>\n                            {data.OrderId}\n                        </td>\n                        <td>\n                            {data.CustomerName}\n                        </td>\n                        <td>\n                            {data.CustomerContactNumber}\n                        </td>\n                        <td>\n                            {data.Products}\n                        </td>\n                        <td>\n                            {data.PurchaseQuantity}\n                        </td>\n                        <td>\n                            {data.TotalAmount} $\n                        </td>\n                    </tr>\n                )\n\n            })\n        }\n        return(\n            <div className={classes.listmaincontainer}>\n                <h1>Order List</h1>\n                <table className={classes.tablemain}>\n                    <tbody>\n                        <tr className={classes.tablehadingrow}>\n                            <th>\n                                Order Id\n                            </th>\n                            <th>\n                                Customer Name\n                            </th>\n                            <th>\n                                Customer Contact Number\n                            </th>\n                            <th>\n                                Products\n                            </th>\n                            <th>\n                                PurchaseQuantity\n                            </th>\n                            <th>\n                                TotalAmount\n                            </th>\n                        </tr>\n                        {localStorage.getItem(\"orderdata\") === null ? <h1>No Data</h1> : display}\n                        {/*{display}*/}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Viewpage","import React from \"react\"\nimport classes from \"./AdminPage.module.css\"\nimport Createpage from \"../Components/Createpage\";\nimport Viewpage from \"../Components/viewpage\";\n\n\nclass SalePage extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            activeTask:{salecreateorder:true,salevieworder:false}\n        }\n    }\n\n    componentDidMount() {\n        const salecreateorder = document.getElementById(\"salecreateorder\")\n        const salevieworder = document.getElementById(\"salevieworder\")\n        salecreateorder.addEventListener(\"click\",() => {\n            this.setState({activeTask:{salecreateorder:true,salevieworder:false}})\n            salecreateorder.style.backgroundColor = \"#90999F\"\n            salevieworder.style.backgroundColor = \"#F2F2F2\"\n        })\n        salevieworder.addEventListener(\"click\",() => {\n            this.setState({activeTask:{salecreateorder:false,salevieworder:true}})\n            salecreateorder.style.backgroundColor = \"#F2F2F2\"\n            salevieworder.style.backgroundColor = \"#90999F\"\n        })\n    }\n\n    signoutbutton = () => {\n        localStorage.setItem(\"isLogged\",false)\n        localStorage.setItem(\"loginby\",null)\n        window.location.assign(\"/\");\n    }\n\n    render() {\n        return(\n            <div>\n                <div className={classes.heading}>\n                    <h1>Sale</h1>\n                    <button onClick={this.signoutbutton} className={classes.signoutbutton}>Sign Out</button>\n                </div>\n                <div className={classes.maincontainer}>\n                    <div className={classes.sidecontainer}>\n                        <div className={classes.sidesubcontainer}>\n                            <p id={\"salecreateorder\"} className={classes.p} style={{backgroundColor:\"#90999F\"}}>\n                                Add Order to Inventory\n                            </p>\n                            <p id={\"salevieworder\"} className={classes.p}>\n                                View Order\n                            </p>\n                        </div>\n                    </div>\n                    <div className={classes.headcontainer}>\n                    {this.state.activeTask.salecreateorder ? <Createpage /> : this.state.activeTask.salevieworder ? <Viewpage /> : <h1>Nothing</h1>}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SalePage","import './App.css';\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\"\nimport Loginpage from \"./Container/LoginPage\";\nimport Homepage from \"./Container/AdminPage\"\nimport SalePage from \"./Container/SalePage\";\n\nfunction App() {\n    const isLogged = localStorage.getItem(\"isLogged\")\n    const loginby = localStorage.getItem(\"loginby\")\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path={\"/adminpage\"}>\n              {isLogged === \"true\" && loginby ===\"admin\" ? <Homepage /> : isLogged ===\"true\" && loginby === \"sale\" ? <SalePage /> : <Loginpage />}\n          </Route>\n            <Route exact path={\"/\"}>\n                {isLogged === \"true\" && loginby ===\"admin\" ? <Homepage /> : isLogged ===\"true\" && loginby === \"sale\" ? <SalePage /> : <Loginpage />}\n            </Route>\n            <Route path={\"/salepage\"}>\n                {isLogged === \"true\" && loginby ===\"admin\" ? <Homepage /> : isLogged === \"true\" && loginby === \"sale\" ? <SalePage /> : <Loginpage />}\n            </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}